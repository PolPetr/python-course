# -*- coding: utf-8 -*-
"""Копия блокнота "1_arithmetics.ipynb"

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1y-rtaMqbcHD1RBWeduxKMcB-65Him27u

(c) В.И. Фирсанова | 2025

# Арифметические операции в Python

1. **Сложение (+)**:
   - `3 + 5` возвращает `8`

2. **Вычитание (-)**:
   - `10 - 4` возвращает `6`

3. **Умножение (*)**:
   - `2 * 6` возвращает `12`

4. **Деление (/)**:
   - `15 / 3` возвращает `5.0` (число с плавающей точкой)

5. **Целочисленное деление (//)**:
   - `15 // 4` возвращает `3` (целое число)

6. **Остаток от деления (%)**:
   - `15 % 4` возвращает `3`

7. **Возведение в степень (**** **либо (pow())**:
   - `2 ** 3` или `pow(2, 3)` возвращает `8`

8. **Модуль (abs())**:
   - `abs(-10)` возвращает `10`

10. **Округление (round())**:
    - `round(4.6)` возвращает `5`
    - `round(4.65, 1)` возвращает `4.7` (1 знак после запятой)

**Порядок арифметических операций в Python:**

1. Скобки
2. Возведение в степень, корень числа
3. Умножение и деление слева-направо
4. Сложение и вычитание слева-направо
"""

num1 = 10
num2 = 20

# Напишите код для сложения 2-х чисел

result = num1 + num2

print(result)

num1 = 10
num2 = 20

# Напишите код для вычитания 2-х чисел

result = num1 - num2

print(result)

num1 = 10
num2 = 20

# Напишите код для умножения 2-х чисел

result = num1 * num2

print(result)

num1 = 10
num2 = 20

# Напишите код для деления 2-х чисел

result = num1 / num2

print(result)

str1 = "Hello, "
str2 = "World!"

# Напишите код для сложения 2-х строк, что получилось? Получилась фраза приветствия.

result = str1 + str2

print(result)

str1 = "Hello, "
num1 = 10

# Напишите код для сложения строки и числа, чем это все закончилось? Закончилось ошибкой, потому что складываются разные типы данных

result = str1 + num1

print(result)

str1 = "Hello, "
num1 = "10"

# Напишите код для сложения строки и числа еще раз, что получилось? Код сработал, потому что сило тоже стало строкой

result = str1 + num1

print(result)

"""Сложение двух строк называется **конкатенацией**. В Python можно конкатенировать только 2 одинаковых типа данных, например, числа и числа, строки и строки, матрицы и матрицы и т.д."""

num1 = 10
num2 = 20

# Выведите на экран результат сложения 2-х чисел

num1 += num2

print(num1 + num2)

"""Операторы `+=`, `-=`, `*=`, `/=` изменяют значение текущей переменной путем сложения, вычитания, умножения и т.д. другой переменной. Они делают код **питоничным**, ускоряя как скорость написания кода, так и скорость его выполнения.

Почему ускоряется скорость выполнения кода?

Сценарий 1

```
a = 1 # занимаем ячейку памяти компьютера и даем ей идентификатор a
b = 1 # занимаем ячейку памяти компьютера и даем ей идентификатор b

c = a + b # занимаем ячейку памяти компьютера и даем ей идентификатор c
```
Сценарий 2
```
a = 1 # занимаем ячейку памяти компьютера и даем ей идентификатор a
b = 1 # занимаем ячейку памяти компьютера и даем ей идентификатор b

a += b # обновляем информацию в ячейке a
```

Результат тот же, но мы не заполняем место в памяти компьютера ячейкой `c`.
А теперь представь, что мы работаем с большими данными. Как много памяти мы сохраним и насколько быстрее будет работать такой код!

Так что питоничность - это то, к чему мы стремимся, как питонисты :)
"""

num1 = 10
num2 = 20

# Выведите на экран результат вычитания 2-х чисел с помощью оператора -=
num1 -= num2
print(num1 - num2)

num1 = 10
num2 = 20

# Выведите на экран результат умножения 2-х чисел с помощью оператора *=

num1 *= num2
print(num1 * num2)

num1 = 10
num2 = 20

# Выведите на экран результат деления 2-х чисел с помощью оператора /=

num1 /= num2
print(num1 / num2)

"""## Теория: имена переменных и операции в Python

### Имена переменных
- Имя переменной должно быть **понятным и описательным**. Например, `age`, `user_name`, а не `a`, `xyz`.
- Используйте **snake_case**, а не **camelCase**: слова разделяются символом подчёркивания (`max_value`, `user_input`).
- Имя переменной **не может начинаться с цифры** и содержать пробелы.
  > Python не считает `0variable`, но считает `variable0`. Это связано с тем, что то, что начинается с цифры, начинает интерпретироваться нашей системой как число. Не будем путать процессор :)
- **Зарезервированные слова** (например, `for`, `if`, `class`) нельзя использовать в качестве имён.
  > Что это за "резерв" такой? Сюда попадают названия, которые участвуют в работе языка Python: `for` запускает цикл, `class` объявляет класс и т.д. Использование таких слов в качестве переменных создаст *неоднозначность* в работе программы. Проще говоря, питон запутается!

Плохой нейминг:
```python
a = 10
b = "hello"
```

Хороший нейминг:
```python
user_age = 10
greeting = "hello"
```

**Практика** перед новым занятием
"""

# 1: создай переменную с именем user_age и сохрани в ней число, введённое с клавиатуры
user_age = int(input("Введи свой возраст: "))

# Проверка
assert isinstance(user_age, int)
print("Переменная создана правильно.")

# Теперь введи сюда имя пользователя
user_age = int(input("Введи свой возраст: "))

# Проверка
assert isinstance(user_age, int)

"""Какой из элементов кода вызвал ошибку? Ответ (для ответа можно использовать внешние источники): Второй элемент кода вызвал ошибку в связи с тем, что программа ожидает увидеть в инпуте число (int), а не слово.

**Задания на закрепление материала**

1. Создай переменную x = 10 и приьавт к ней 5 с помощью сокращённого (комбинированного) оператора
"""

x = 10
x += 5
print(x)

"""2. Написать код, чтобы преобразовать температуру в градусах по Цельсию к виду значений температуры в градусах по Фаренгейту. Использовать `int(input())` для ввода значения температур"""

celsius = int(input("Введите температуру в градусах Цельсия: "))

fahrenheit = (celsius * 9/5) + 32

print(fahrenheit)

"""3. Написать код, чтобы переводить минуты в часы и считать остаток минут. Использовать `int(input())` для ввода количества минут"""

minutes = int(input("Введите количество минут: "))
hours = minutes / 60
print(hours)

"""4. Ячейка кода ниже должна принимать 2 числа и считать их сумму, разность, произведение и частное"""

a = int(input("Введите число: "))
b = int(input("Введите число: "))
print (a + b)
print (a - b)
print (a * b)
print (a / b)

"""5. Сколько будет 15% от 200?"""

a = 200 * 0.15
print (a)